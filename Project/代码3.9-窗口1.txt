.版本 2
.支持库 spec
.支持库 ExuiKrnln
.支持库 EThread

.程序集 窗口程序集_窗口1
.程序集变量 hourf, 整数型, , , 未加工的
.程序集变量 minf, 整数型, , , 未加工的
.程序集变量 secf, 整数型, , , 未加工的
.程序集变量 hourt, 文本型, , , 加工后的
.程序集变量 mint, 文本型, , , 加工后的
.程序集变量 sect, 文本型, , , 加工后的
.程序集变量 hour12, 整数型
.程序集变量 星期, 文本型

.子程序 _窗口EX1_反馈事件, 整数型
.参数 透传参数1, 整数型
.参数 透传参数2, 整数型
.参数 保留参数3, 整数型
.参数 保留参数4, 整数型



.子程序 _窗口EX1_控制钮鼠标左键按下, 整数型
.参数 控制钮索引, 整数型
.参数 附加参数1, 整数型
.参数 附加参数2, 整数型
.参数 保留参数3, 整数型



.子程序 _窗口1_将被销毁

跳出循环 ＝ 真
_启动窗口.总在最前 ＝ 真
_启动窗口.位置 ＝ 0
_启动窗口.激活 ()
调试输出 (“激活了”)
时钟1.时钟周期 ＝ 0
置等待鼠标 ()
恢复鼠标 ()
销毁 ()


.子程序 _标签EX2_鼠标左键单击, 整数型
.参数 坐标x, 整数型
.参数 坐标y, 整数型
.参数 保留参数1, 整数型
.参数 保留参数2, 整数型



.子程序 _窗口1_创建完毕

' 初始化，将变量设为默认值，否则可能无法运行
跳出循环 ＝ 真
延迟 (256)
十二小时模式 ＝ 0
显示日期 ＝ 1
数据量f ＝ 0
调试输出 (窗口EX1.皮肤)


.子程序 _时钟1_周期事件

.如果 (启动异步 ＝ 真)
    创建进入许可证 ()
    进入许可区 (许可)
    启动线程 (&显示时间, , )
    延迟 (4)
    启动线程 (&显示时间, , )
.否则
    显示时间 ()
.如果结束


.子程序 显示时间

时钟3.时钟周期 ＝ 1000
标签EX1.标题 ＝ 时间 (十二小时模式)
标签EX2.标题 ＝ 日期 (显示日期)
数据量f ＝ 数据量f ＋ 1
标签EX2.字体色 ＝ 字体颜色
标签EX1.字体色 ＝ 字体颜色


.子程序 时间, 文本型
.参数 十二小时, 整数型, , 设置为1时显示十二小时，其他数字均为二十四小时

hourf ＝ 取小时 (取现行时间 ())
minf ＝ 取分钟 (取现行时间 ())
secf ＝ 取秒 (取现行时间 ())
.如果 (hourf ＜ 10)
    hourt ＝ “0” ＋ 到文本 (hourf)
.否则
    hourt ＝ 到文本 (hourf)
.如果结束
.如果 (minf ＜ 10)
    mint ＝ “0” ＋ 到文本 (minf)
.否则
    mint ＝ 到文本 (minf)
.如果结束
.如果 (secf ＜ 10)
    sect ＝ “0” ＋ 到文本 (secf)
.否则
    sect ＝ 到文本 (secf)
.如果结束
.如果 (十二小时 ＝ 1)
    .如果 (到整数 (hourt) ＞ 12)
        hour12 ＝ 到整数 (hourt) － 12
    .否则
        .如果 (到整数 (hourt) ＝ 0)
            hour12 ＝ 12
        .否则
            .如果 (到整数 (hourt) ≤ 12)
                hour12 ＝ 到整数 (hourt)
            .否则

            .如果结束

        .如果结束

    .如果结束

.否则
    hour12 ＝ 到整数 (hourf)
.如果结束
返回 (到文本 (到文本 (hour12) ＋ “:” ＋ 到文本 (mint) ＋ “:” ＋ 到文本 (sect)))


.子程序 日期, 文本型
.参数 是否显示, 整数型, , 输入1时显示日期，其他数字不显示

.如果 (是否显示 ＝ 1)
    .如果 (取星期几 (取现行时间 ()) ＝ 1)
        星期 ＝ “星期日”
    .否则
        .如果 (取星期几 (取现行时间 ()) ＝ 2)
            星期 ＝ “星期一”
        .否则
            .如果 (取星期几 (取现行时间 ()) ＝ 3)
                星期 ＝ “星期二”
            .否则
                .如果 (取星期几 (取现行时间 ()) ＝ 4)
                    星期 ＝ “星期三”
                .否则
                    .如果 (取星期几 (取现行时间 ()) ＝ 5)
                        星期 ＝ “星期四”
                    .否则
                        .如果 (取星期几 (取现行时间 ()) ＝ 6)
                            星期 ＝ “星期五”
                        .否则
                            星期 ＝ “星期六”
                        .如果结束

                    .如果结束

                .如果结束

            .如果结束

        .如果结束

    .如果结束
    返回 (到文本 (取年份 (取现行时间 ())) ＋ “/” ＋ 到文本 (取月份 (取现行时间 ())) ＋ “/” ＋ 到文本 (取日 (取现行时间 ())) ＋ “ ” ＋ 星期)
.否则
    返回 (“”)
.如果结束


.子程序 _窗口EX1_控制钮左键单击, 整数型
.参数 控制钮索引, 整数型
.参数 附加参数1, 整数型
.参数 附加参数2, 整数型
.参数 保留参数3, 整数型

.如果真 (控制钮索引 ＝ 2)
    _启动窗口.总在最前 ＝ 真
    _启动窗口.位置 ＝ 0
    _启动窗口.激活 ()
    调试输出 (“激活了”)
    时钟1.时钟周期 ＝ 0
    销毁 ()

.如果真结束


.子程序 _标签EX1_鼠标左键单击, 整数型
.参数 坐标x, 整数型
.参数 坐标y, 整数型
.参数 保留参数1, 整数型
.参数 保留参数2, 整数型



.子程序 _时钟2_周期事件



.子程序 _时钟3_周期事件



.子程序 _滤镜EX1_鼠标左键单击, 整数型
.参数 坐标x, 整数型
.参数 坐标y, 整数型
.参数 保留参数1, 整数型
.参数 保留参数2, 整数型



.子程序 good

循环 ＝ 1
.判断循环首 (循环 ＝ 1)
    .如果 (跳出循环 ＝ 真)
        _启动窗口.选择框EX1.标题 ＝ “!!功能已禁用，重新启动即可恢复!!”
        跳出循环 ()
    .否则
        时钟3.时钟周期 ＝ 1000
        标签EX1.标题 ＝ 时间 (十二小时模式)
        标签EX2.标题 ＝ 日期 (显示日期)
        数据量f ＝ 数据量f ＋ 1
        标签EX2.字体色 ＝ 字体颜色
        标签EX1.字体色 ＝ 字体颜色
        延迟 (1)

    .如果结束

.判断循环尾 ()




.版本 2

.常量 版本号, "“2.9.8(ver03)”", 公开, 修改此值可改变全局版本号



.版本 2

.全局变量 十二小时模式, 整数型, , , 与主程序通信
.全局变量 显示日期, 整数型, , , 与主程序通信
.全局变量 字体颜色, 整数型, , , 与主程序通信
.全局变量 数据量f, 整数型
.全局变量 数据量, 整数型
.全局变量 明亮高, 字节集, , , 主题配置，默认值（明亮主题，背景高透明）
.全局变量 明亮低, 字节集, , , 主题配置
.全局变量 明亮透, 字节集, , , 主题配置
.全局变量 明亮不透, 字节集, , , 主题配置
.全局变量 暗黑高, 字节集, , , 主题配置
.全局变量 暗黑低, 字节集, , , 主题配置
.全局变量 暗黑透, 字节集, , , 主题配置
.全局变量 暗黑不透, 字节集, , , 主题配置
.全局变量 循环, 整数型, , , 绕过死循环检查
.全局变量 跳出循环, 逻辑型, , , 关闭时钟不会报错
.全局变量 num, 整数型, , , 彩蛋计数器
.全局变量 启动异步, 逻辑型
.全局变量 许可, 整数型
.全局变量 返回原始人数据, 文本型, , , 返回从服务器获取的未经处理的原始数据
.全局变量 重试次数, 整数型
